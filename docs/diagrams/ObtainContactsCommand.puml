@startuml

!include .SequenceDiagram.config
hide footbox

actor CEG_Student
participant ":ObtainContactsCommand" as ObtainContactsCommand
participant ":UI" as UI
participant ":Command" as Command

CEG_Student -> ObtainContactsCommand: execute(userInput: String)
activate ObtainContactsCommand

ObtainContactsCommand -> Command: createJsonObject()
activate Command

Command --> ObtainContactsCommand: JsonObject jsonObject
deactivate Command

ObtainContactsCommand -> ObtainContactsCommand: getSchoolName(userInput: String)
activate ObtainContactsCommand
return schoolName: String

ObtainContactsCommand -> ObtainContactsCommand: getContactType(userInput: String)
activate ObtainContactsCommand

alt inputParts.length != 2
    ObtainContactsCommand --> CEG_Student: Displays Invalid Input Error
else else
    return contactType: String
end

ObtainContactsCommand -> ObtainContactsCommand: findMatchingSchool(jsonObject: JsonObject, schoolName: String)
activate ObtainContactsCommand

loop for  each school found in the set of schools
    opt checks if the school name matches
        return matchingSchool: String
    end
end

opt no matching School Names
    ObtainContactsCommand --> CEG_Student: Display "Unknown university - " + schoolName
end

ObtainContactsCommand -> ObtainContactsCommand: handleContactType(schoolInfo: JsonObject, matchingSchool: String, contactType: String)
activate ObtainContactsCommand

alt EMAIL_KEY
    ObtainContactsCommand -> UI: printContactInformation(EMAIL_TAG: String, schoolName: String, email:String)
else NUMBER_KEY
    ObtainContactsCommand -> UI: printContactInformation(NUMBER_TAG: String, schoolName: String, number:String)
else Invalid
    ObtainContactsCommand --> CEG_Student: Display Invalid Contact Type Message
end


ObtainContactsCommand --> ObtainContactsCommand
deactivate ObtainContactsCommand

ObtainContactsCommand --> CEG_Student

deactivate ObtainContactsCommand

@enduml
